{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","style","marginLeft","marginRight","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","createdAt","messages","console","log","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","dateConvert","creadtedAt","d","Date","toDateString","slice","toLocaleTimeString","props","messageClass","messageside","className","href","alt","src","float","seconds","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f57b3e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyDRoYLcbNA7AudMEt3R0IFGBgS62me6n9c\",\n    authDomain: \"bhaicharafc.firebaseapp.com\",\n    databaseURL: \"https://bhaicharafc.firebaseio.com\",\n    projectId: \"bhaicharafc\",\n    storageBucket: \"bhaicharafc.appspot.com\",\n    messagingSenderId: \"329196853880\",\n    appId: \"1:329196853880:web:ef1dadbdebe6e7e1242b8d\",\n    measurementId: \"G-SCP9SMBVDX\"\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1><center>With &#10084;&#65039; from BhaicharaFCüî•</center></h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  /*const signInWithEmail = () => {\n    const provider = new firebase.auth.signInWithEmailAndPassword();\n    auth.signInWithPopup(provider);\n  }*/\n  return (\n      <div>\n      <button onClick={signInWithGoogle} style={{marginLeft: \"200px\",marginRight : \"200px\"}}>Sign in with Google</button>\n      </div>\n  )\n}\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\nfunction ChatRoom() {\n\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  \n  const [messages] = useCollectionData(query, { idField: 'id' , createdAt : 'createdAt'});\n  console.log(messages);\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Enter Message\" />\n\n      <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n\n    </form>\n  </>)\n\n}\n\nfunction dateConvert(creadtedAt){\n  var d = new Date(creadtedAt * 1000);\n  return (d.toDateString(\"in\").slice(4) + \" @ \"+ d.toLocaleTimeString().slice(0,4) + d.toLocaleTimeString().slice(7));\n}\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, createdAt} = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  const messageside = messageClass === \"sent\" ? \"right\" : \"left\";\n\n  return (<>\n\n    <div className=\"ui container comments\">\n            <div className={`message ${messageClass}`}>\n                <a href=\"/\" className=\"avatar\">\n                    <img alt=\"avatar\" src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'}/>\n                </a>\n                <div className=\"content\">\n                    <p>\n                      <div className=\"text\">{text}</div>\n                    </p>\n                    \n                </div>\n            </div>\n            <div className=\"metadata\">\n                <span style={{float:messageside}}>{dateConvert(createdAt.seconds)}</span>\n            </div>\n    </div>\n\n\n  </>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}